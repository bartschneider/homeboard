package api

import "github.com/bartosz/homeboard/internal/db"

// GetWidgetTemplates returns predefined widget templates
func GetWidgetTemplates() []db.WidgetTemplate {
	return []db.WidgetTemplate{
		{
			Type:        "key_value",
			Name:        "Key-Value Display",
			Description: "Simple display with a title and value",
			Preview:     "Title: Value",
			Fields: []db.WidgetTemplateField{
				{
					Key:         "title",
					Label:       "Title",
					Type:        "text",
					Required:    true,
					Description: "The display title/label",
					Placeholder: "data.title",
				},
				{
					Key:         "value",
					Label:       "Value",
					Type:        "text",
					Required:    true,
					Description: "The main value to display",
					Placeholder: "data.value",
				},
				{
					Key:         "unit",
					Label:       "Unit",
					Type:        "text",
					Required:    false,
					Description: "Optional unit suffix",
					Placeholder: "data.unit",
				},
			},
			Example: map[string]interface{}{
				"title": "Temperature",
				"value": "22.5",
				"unit":  "¬∞C",
			},
		},
		{
			Type:        "title_subtitle_value",
			Name:        "Title-Subtitle-Value",
			Description: "Display with title, subtitle, and main value",
			Preview:     "Title\nSubtitle\nValue",
			Fields: []db.WidgetTemplateField{
				{
					Key:         "title",
					Label:       "Title",
					Type:        "text",
					Required:    true,
					Description: "Main title",
					Placeholder: "data.title",
				},
				{
					Key:         "subtitle",
					Label:       "Subtitle",
					Type:        "text",
					Required:    false,
					Description: "Secondary title",
					Placeholder: "data.subtitle",
				},
				{
					Key:         "value",
					Label:       "Value",
					Type:        "text",
					Required:    true,
					Description: "Primary value",
					Placeholder: "data.value",
				},
				{
					Key:         "description",
					Label:       "Description",
					Type:        "text",
					Required:    false,
					Description: "Additional description",
					Placeholder: "data.description",
				},
			},
			Example: map[string]interface{}{
				"title":       "System Status",
				"subtitle":    "Current State",
				"value":       "Online",
				"description": "All systems operational",
			},
		},
		{
			Type:        "metric_grid",
			Name:        "Metrics Grid",
			Description: "Grid layout for multiple metrics",
			Preview:     "[Metric1] [Metric2]\n[Metric3] [Metric4]",
			Fields: []db.WidgetTemplateField{
				{
					Key:         "metrics",
					Label:       "Metrics Array",
					Type:        "array",
					Required:    true,
					Description: "Array of metric objects",
					Placeholder: "data.metrics",
				},
				{
					Key:         "metric_title_path",
					Label:       "Metric Title Path",
					Type:        "text",
					Required:    true,
					Description: "Path to title within each metric",
					Placeholder: "name",
				},
				{
					Key:         "metric_value_path",
					Label:       "Metric Value Path",
					Type:        "text",
					Required:    true,
					Description: "Path to value within each metric",
					Placeholder: "value",
				},
				{
					Key:         "metric_unit_path",
					Label:       "Metric Unit Path",
					Type:        "text",
					Required:    false,
					Description: "Path to unit within each metric",
					Placeholder: "unit",
				},
			},
			Example: map[string]interface{}{
				"metrics": []map[string]interface{}{
					{"name": "CPU", "value": "45", "unit": "%"},
					{"name": "Memory", "value": "8.2", "unit": "GB"},
					{"name": "Disk", "value": "156", "unit": "GB"},
					{"name": "Network", "value": "1.2", "unit": "Mbps"},
				},
				"metric_title_path": "name",
				"metric_value_path": "value",
				"metric_unit_path":  "unit",
			},
		},
		{
			Type:        "weather_current",
			Name:        "Current Weather",
			Description: "Weather display with icon, temperature, and conditions",
			Preview:     "‚òÄÔ∏è 22¬∞C\nSunny",
			Fields: []db.WidgetTemplateField{
				{
					Key:         "temperature",
					Label:       "Temperature",
					Type:        "text",
					Required:    true,
					Description: "Current temperature",
					Placeholder: "data.main.temp",
				},
				{
					Key:         "condition",
					Label:       "Weather Condition",
					Type:        "text",
					Required:    true,
					Description: "Weather description",
					Placeholder: "data.weather[0].description",
				},
				{
					Key:         "icon",
					Label:       "Weather Icon",
					Type:        "text",
					Required:    false,
					Description: "Weather icon code or emoji",
					Placeholder: "data.weather[0].icon",
				},
				{
					Key:         "humidity",
					Label:       "Humidity",
					Type:        "text",
					Required:    false,
					Description: "Humidity percentage",
					Placeholder: "data.main.humidity",
				},
				{
					Key:         "wind_speed",
					Label:       "Wind Speed",
					Type:        "text",
					Required:    false,
					Description: "Wind speed",
					Placeholder: "data.wind.speed",
				},
			},
			Example: map[string]interface{}{
				"temperature": "22.5",
				"condition":   "Clear sky",
				"icon":        "01d",
				"humidity":    "65",
				"wind_speed":  "3.5",
			},
		},
		{
			Type:        "time_display",
			Name:        "Time Display",
			Description: "Clock widget showing time and date",
			Preview:     "14:30:45\n2025-01-26",
			Fields: []db.WidgetTemplateField{
				{
					Key:         "time",
					Label:       "Current Time",
					Type:        "text",
					Required:    true,
					Description: "Current time string",
					Placeholder: "data.time",
				},
				{
					Key:         "date",
					Label:       "Current Date",
					Type:        "text",
					Required:    false,
					Description: "Current date string",
					Placeholder: "data.date",
				},
				{
					Key:         "timezone",
					Label:       "Timezone",
					Type:        "text",
					Required:    false,
					Description: "Timezone information",
					Placeholder: "data.timezone",
				},
				{
					Key:         "format",
					Label:       "Time Format",
					Type:        "text",
					Required:    false,
					Description: "Time format type",
					Placeholder: "data.format",
				},
			},
			Example: map[string]interface{}{
				"time":     "14:30:45",
				"date":     "January 26, 2025",
				"timezone": "UTC",
				"format":   "24h",
			},
		},
		{
			Type:        "status_list",
			Name:        "Status List",
			Description: "List of items with status indicators",
			Preview:     "‚úÖ Item 1: OK\n‚ùå Item 2: Error\n‚ö†Ô∏è Item 3: Warning",
			Fields: []db.WidgetTemplateField{
				{
					Key:         "items",
					Label:       "Status Items",
					Type:        "array",
					Required:    true,
					Description: "Array of status items",
					Placeholder: "data.services",
				},
				{
					Key:         "item_name_path",
					Label:       "Item Name Path",
					Type:        "text",
					Required:    true,
					Description: "Path to name within each item",
					Placeholder: "name",
				},
				{
					Key:         "item_status_path",
					Label:       "Item Status Path",
					Type:        "text",
					Required:    true,
					Description: "Path to status within each item",
					Placeholder: "status",
				},
				{
					Key:         "item_message_path",
					Label:       "Item Message Path",
					Type:        "text",
					Required:    false,
					Description: "Path to message within each item",
					Placeholder: "message",
				},
			},
			Example: map[string]interface{}{
				"items": []map[string]interface{}{
					{"name": "Web Server", "status": "online", "message": "Running normally"},
					{"name": "Database", "status": "online", "message": "Connected"},
					{"name": "Cache", "status": "warning", "message": "High memory usage"},
				},
				"item_name_path":    "name",
				"item_status_path":  "status",
				"item_message_path": "message",
			},
		},
		{
			Type:        "icon_list",
			Name:        "Icon List",
			Description: "List with icons and descriptions",
			Preview:     "üè† Home: Active\nüìä Dashboard: Online\n‚öôÔ∏è Settings: Ready",
			Fields: []db.WidgetTemplateField{
				{
					Key:         "items",
					Label:       "List Items",
					Type:        "array",
					Required:    true,
					Description: "Array of list items",
					Placeholder: "data.items",
				},
				{
					Key:         "item_icon_path",
					Label:       "Item Icon Path",
					Type:        "text",
					Required:    false,
					Description: "Path to icon within each item",
					Placeholder: "icon",
				},
				{
					Key:         "item_title_path",
					Label:       "Item Title Path",
					Type:        "text",
					Required:    true,
					Description: "Path to title within each item",
					Placeholder: "title",
				},
				{
					Key:         "item_description_path",
					Label:       "Item Description Path",
					Type:        "text",
					Required:    false,
					Description: "Path to description within each item",
					Placeholder: "description",
				},
			},
			Example: map[string]interface{}{
				"items": []map[string]interface{}{
					{"icon": "üè†", "title": "Home", "description": "Main dashboard"},
					{"icon": "üìä", "title": "Analytics", "description": "Usage statistics"},
					{"icon": "‚öôÔ∏è", "title": "Settings", "description": "Configuration panel"},
				},
				"item_icon_path":        "icon",
				"item_title_path":       "title",
				"item_description_path": "description",
			},
		},
		{
			Type:        "text_block",
			Name:        "Text Block",
			Description: "Simple text content display",
			Preview:     "Lorem ipsum dolor sit amet, consectetur adipiscing elit...",
			Fields: []db.WidgetTemplateField{
				{
					Key:         "title",
					Label:       "Title",
					Type:        "text",
					Required:    false,
					Description: "Optional title",
					Placeholder: "data.title",
				},
				{
					Key:         "content",
					Label:       "Text Content",
					Type:        "text",
					Required:    true,
					Description: "Main text content",
					Placeholder: "data.content",
				},
				{
					Key:         "author",
					Label:       "Author",
					Type:        "text",
					Required:    false,
					Description: "Content author",
					Placeholder: "data.author",
				},
				{
					Key:         "timestamp",
					Label:       "Timestamp",
					Type:        "text",
					Required:    false,
					Description: "Content timestamp",
					Placeholder: "data.created_at",
				},
			},
			Example: map[string]interface{}{
				"title":     "Daily Quote",
				"content":   "The only way to do great work is to love what you do.",
				"author":    "Steve Jobs",
				"timestamp": "2025-01-26",
			},
		},
		{
			Type:        "chart_simple",
			Name:        "Simple Chart Data",
			Description: "Basic chart data display (values only)",
			Preview:     "Data Points: [10, 20, 15, 25, 30]",
			Fields: []db.WidgetTemplateField{
				{
					Key:         "title",
					Label:       "Chart Title",
					Type:        "text",
					Required:    true,
					Description: "Chart title",
					Placeholder: "data.title",
				},
				{
					Key:         "data_points",
					Label:       "Data Points",
					Type:        "array",
					Required:    true,
					Description: "Array of numeric values",
					Placeholder: "data.values",
				},
				{
					Key:         "labels",
					Label:       "Data Labels",
					Type:        "array",
					Required:    false,
					Description: "Array of labels for data points",
					Placeholder: "data.labels",
				},
				{
					Key:         "unit",
					Label:       "Data Unit",
					Type:        "text",
					Required:    false,
					Description: "Unit for data values",
					Placeholder: "data.unit",
				},
			},
			Example: map[string]interface{}{
				"title":       "Weekly Sales",
				"data_points": []int{10, 20, 15, 25, 30, 18, 22},
				"labels":      []string{"Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"},
				"unit":        "orders",
			},
		},
		{
			Type:        "image_caption",
			Name:        "Image with Caption",
			Description: "Display an image with optional caption",
			Preview:     "[Image]\nCaption text here",
			Fields: []db.WidgetTemplateField{
				{
					Key:         "image_url",
					Label:       "Image URL",
					Type:        "text",
					Required:    true,
					Description: "URL to the image",
					Placeholder: "data.image_url",
				},
				{
					Key:         "caption",
					Label:       "Caption",
					Type:        "text",
					Required:    false,
					Description: "Image caption",
					Placeholder: "data.caption",
				},
				{
					Key:         "alt_text",
					Label:       "Alt Text",
					Type:        "text",
					Required:    false,
					Description: "Alternative text for accessibility",
					Placeholder: "data.alt_text",
				},
				{
					Key:         "title",
					Label:       "Title",
					Type:        "text",
					Required:    false,
					Description: "Optional title above image",
					Placeholder: "data.title",
				},
			},
			Example: map[string]interface{}{
				"image_url": "https://example.com/image.jpg",
				"caption":   "Beautiful sunset over the mountains",
				"alt_text":  "Sunset landscape photo",
				"title":     "Photo of the Day",
			},
		},
		{
			Type:        "rss_headlines",
			Name:        "RSS Headlines",
			Description: "Display RSS feed headlines in a list format",
			Preview:     "‚Ä¢ Headline 1\n‚Ä¢ Headline 2\n‚Ä¢ Headline 3",
			Fields: []db.WidgetTemplateField{
				{
					Key:         "feed_title",
					Label:       "Feed Title",
					Type:        "text",
					Required:    false,
					Description: "Optional title for the RSS feed",
					Placeholder: "title",
				},
				{
					Key:         "items",
					Label:       "Headlines",
					Type:        "array",
					Required:    true,
					Description: "Array of RSS item titles",
					Placeholder: "items[*].title",
				},
				{
					Key:         "max_items",
					Label:       "Maximum Items",
					Type:        "number",
					Required:    false,
					Description: "Maximum number of headlines to display",
					Placeholder: "5",
				},
			},
			Example: map[string]interface{}{
				"feed_title": "Latest News",
				"items":      []string{"Breaking News Item", "Technology Update", "Sports Report"},
				"max_items":  5,
			},
		},
		{
			Type:        "rss_summary",
			Name:        "RSS Article Summary",
			Description: "Display a single RSS article with title, description, and metadata",
			Preview:     "Article Title\nShort description of the article...\nPublished: Date",
			Fields: []db.WidgetTemplateField{
				{
					Key:         "title",
					Label:       "Article Title",
					Type:        "text",
					Required:    true,
					Description: "Title of the RSS article",
					Placeholder: "items[0].title",
				},
				{
					Key:         "description",
					Label:       "Article Description",
					Type:        "text",
					Required:    true,
					Description: "Brief description or summary",
					Placeholder: "items[0].description",
				},
				{
					Key:         "pub_date",
					Label:       "Publication Date",
					Type:        "text",
					Required:    false,
					Description: "When the article was published",
					Placeholder: "items[0].pub_date",
				},
				{
					Key:         "author",
					Label:       "Author",
					Type:        "text",
					Required:    false,
					Description: "Article author",
					Placeholder: "items[0].author",
				},
				{
					Key:         "link",
					Label:       "Article Link",
					Type:        "text",
					Required:    false,
					Description: "URL to the full article",
					Placeholder: "items[0].link",
				},
			},
			Example: map[string]interface{}{
				"title":       "New Technology Breakthrough",
				"description": "Scientists have discovered a revolutionary new method...",
				"pub_date":    "2024-01-15",
				"author":      "Jane Smith",
				"link":        "https://example.com/article",
			},
		},
		{
			Type:        "rss_feed_info",
			Name:        "RSS Feed Information",
			Description: "Display RSS feed metadata and statistics",
			Preview:     "Feed: Technology News\nTotal Items: 25\nLast Updated: Date",
			Fields: []db.WidgetTemplateField{
				{
					Key:         "feed_title",
					Label:       "Feed Title",
					Type:        "text",
					Required:    true,
					Description: "Title of the RSS feed",
					Placeholder: "title",
				},
				{
					Key:         "feed_description",
					Label:       "Feed Description",
					Type:        "text",
					Required:    false,
					Description: "Description of the RSS feed",
					Placeholder: "description",
				},
				{
					Key:         "item_count",
					Label:       "Item Count",
					Type:        "number",
					Required:    false,
					Description: "Number of items in the feed",
					Placeholder: "items.length",
				},
				{
					Key:         "last_build",
					Label:       "Last Updated",
					Type:        "text",
					Required:    false,
					Description: "When the feed was last updated",
					Placeholder: "last_build",
				},
			},
			Example: map[string]interface{}{
				"feed_title":       "Tech News Daily",
				"feed_description": "Latest technology news and updates",
				"item_count":       25,
				"last_build":       "2024-01-15 10:30:00",
			},
		},
	}
}
